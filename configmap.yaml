apiVersion: v1
kind: ConfigMap
metadata:
  name: cleanup-jobs-script
  namespace: cleanup
data:
  cleanup-jobs.sh: |
    #!/bin/bash

    # Get the list of control-plane nodes
    NODES=$(kubectl get nodes -l node-role.kubernetes.io/control-plane --no-headers -o custom-columns=":metadata.name")

    # Loop through each control-plane node
    for NODE in $NODES; do
      # Define the YAML manifest for the Job
      cat <<EOF | kubectl apply -f -
    apiVersion: batch/v1
    kind: Job
    metadata:
      name: control-plane-cleanup-job-$NODE-$(date +%s)
      namespace: cleanup
    spec:
      template:
        metadata:
          labels:
            app: control-plane-cleanup
        spec:
          serviceAccountName: cleanup-jobs-sa
          affinity:
            nodeAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                nodeSelectorTerms:
                - matchExpressions:
                  - key: kubernetes.io/hostname
                    operator: In
                    values:
                    - $NODE
          tolerations:
          - key: "node-role.kubernetes.io/control-plane"
            operator: "Exists"
            effect: "NoSchedule"
          - key: "node-role.kubernetes.io/master"
            operator: "Exists"
            effect: "NoSchedule"
          containers:
          - name: script-container
            securityContext:
              runAsNonRoot: true
              runAsUser: 1000  # Set to a non-root user ID
            image: centos:latest
            command: 
              - "/bin/sh"
              - "-c"
              - |
                # Update actual commands for disk cleanup
                echo "Running cleanup commands on node $NODE"
                # Example commands:
                df -h  # Display disk usage information
                rm -rf /var/log/*  # Remove old log files
                rm -rf /tmp/*      # Clear temporary directories
                journalctl --vacuum-size=10M # Delete the oldest log entries until the total size of the logs is less than or equal to 10MB
                df -h  # Display disk usage information
            volumeMounts:
              - mountPath: /var/log
                name: var-log
                readOnly: false
              - mountPath: /var/log/journal
                name: var-log-journal
                readOnly: false
              - name: var-opt-journal-log
                mountPath: /var/opt/journal/log
                readOnly: false
          restartPolicy: OnFailure
          volumes:
          - name: var-log
            hostPath:
              path: /var/log
              type: Directory
          - name: var-log-journal
            hostPath:
              path: /var/log/journal
              type: Directory
          - name: var-opt-journal-log
            hostPath:
              path: /var/opt/journal/log
              type: Directory
    EOF
    done
